plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'com.cherry.lib.doc'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.3"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.3'

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"
    implementation "androidx.lifecycle:lifecycle-common:2.4.1"

    implementation("io.coil-kt:coil:1.4.0")

    implementation 'org.apache.poi:poi-scratchpad:3.17'
    implementation 'commons-io:commons-io:2.0.1'

    implementation('com.blankj:utilcodex:1.31.1')
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "apero-inhouse"
            artifactId = "doc-reader"
            version = "1.0.0-alpha01"
            artifact("${project.buildDir}/outputs/aar/library-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().dependencies?.first() ?: asNode().appendNode('dependencies')
                configurations.implementation.dependencies.each {
                    if (it.name != "unspecified") {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        if (it.version) {
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url = uri("https://artifactory.apero.vn/artifactory/gradle-release/")
            credentials {
                username = "deployer"
                password = "apero@123"
            }
        }
    }
}